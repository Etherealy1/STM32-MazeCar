一、项目简介
本项目用于重庆理工大学物联网工程嵌入式程序设计课程设计
小车基于STM32F103RC所构建
迷宫为8*8的矩形迷宫

二、编译环境及工具

Keil 5 、Clion

三、片上资源分布
SYSCLK:72MHz
DEBUG:SWD
A0-A2:74HC138编码芯片上的红外发射管引脚
L1-L4:左方编码电机的四根引脚
R1-R4:右方编码电机的四根引脚
IR1-IR5:红外的使能引脚
TI6:触发10ms定时中断
四、软件设计
文件结构
所有函数都写在main.c中，分为三个部分。

红外和电机驱动
小车主题算法
main函数
数据信息
小车坐标信息
typedef struct {
    uchar x;//所处的x坐标
    uchar y;//所处的y坐标
}xyTypeDef;
三个驱动数组
uchar forward[]={0x11,0x33,0x22,0x66,0x44,0xcc,0x88,0x99};//左转驱动数组
uchar reverse[]={0x11,0x99,0x88,0xcc,0x44,0x66,0x22,0x33};//右转驱动数组
uchar for_rev[]={0x11,0x93,0x82,0xc6,0x44,0x6c,0x28,0x39};//直行驱动数组
maze[][]中的元素高四位记录小车方向，低四位记录墙的状况
五、算法设计
1.绝对方向和相对方向
/** 绝对方向：       相对方向：
  *     0           0：直行
  * 3       1       1：右转
  *     2           2：掉头
  *                 3：左转
**/

2.绝对方向和相对方向的相互换算
绝对方向->相对方向
相对方向 = (转向后的绝对方向 - 转向前的绝对方向) % 4;
相对方向->绝对方向
转向后的绝对方向 = （转向前的绝对方向 + 转弯方向(即相对方向)）%4；

3.main函数
外设初始化
外设启动
定义初始变量
While1
冲刺起始判定
如果判定不出，说明冲刺结束，退出程序。
记录迷宫信息
确定下个方向
执行下个方向
刷新地图路径信息
刷新方向栈
获取红外情况和对红外标志位进行置位

5.bestway寻找
运用了广度优先算法
在51单片机中，因为51内存不够，故用数组代替队列。而在STM32中，我采用了封装数组为队列的方式
借助以上的算法和数据结构，来进行迷宫的等高表建立
建立好等高表后，可根据队列来进行最短路径的查询
